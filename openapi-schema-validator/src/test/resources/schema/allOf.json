[
  {
    "description": "allOf missing discriminator",
    "schema": {
      "$ref": "#/components/schemas/Lizard",
      "components": {
        "schemas": {
          "Pet": {
            "type": "object",
            "required": [
              "petType"
            ],
            "properties": {
              "petType": {
                "type": "string"
              }
            },
            "discriminator": {
              "propertyName": "petType",
              "mapping": {
                "dog": "Dog"
              }
            }
          },
          "Lizard": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pet"
              },
              {
                "type": "object",
                "properties": {
                  "loveRocks": {
                    "type": "boolean"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "tests": [
      {
        "description": "discriminator not present in not valid",
        "data": {
          "loveRocks": true
        },
        "valid": false
      }
    ]
  },
  {
    "description": "allOf implicit discriminator",
    "schema": {
      "$ref": "#/components/schemas/Cat",
      "components": {
        "schemas": {
          "Pet": {
            "type": "object",
            "required": [
              "petType"
            ],
            "properties": {
              "petType": {
                "type": "string"
              }
            },
            "discriminator": {
              "propertyName": "petType",
              "mapping": {
                "dog": "Dog"
              }
            }
          },
          "Cat": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pet"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "tests": [
      {
        "description": "A cat with implicit discriminator is valid",
        "data": {
          "petType": "Cat",
          "name": "misty"
        },
        "valid": true
      }
    ]
  },
  {
    "description": "allOf explicit discriminator",
    "schema": {
      "$ref": "#/components/schemas/Dog",
      "components": {
        "schemas": {
          "Pet": {
            "type": "object",
            "required": [
              "petType"
            ],
            "properties": {
              "petType": {
                "type": "string"
              }
            },
            "discriminator": {
              "propertyName": "petType",
              "mapping": {
                "dog": "Dog"
              }
            }
          },
          "Dog": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Pet"
              },
              {
                "type": "object",
                "properties": {
                  "bark": {
                    "type": "string"
                  }
                }
              }
            ]
          }
        }
      }
    },
    "tests": [
      {
        "description": "A dog with mapped discriminator is valid",
        "data": {
          "petType": "dog",
          "bark": "soft"
        },
        "valid": true
      }
    ]
  },
  {
    "description": "allOf",
    "schema": {
      "allOf": [
        {
          "properties": {
            "bar": {
              "type": "integer"
            }
          },
          "required": [
            "bar"
          ]
        },
        {
          "properties": {
            "foo": {
              "type": "string"
            }
          },
          "required": [
            "foo"
          ]
        }
      ]
    },
    "tests": [
      {
        "description": "allOf",
        "data": {
          "foo": "baz",
          "bar": 2
        },
        "valid": true
      },
      {
        "description": "mismatch second",
        "data": {
          "foo": "baz"
        },
        "valid": false
      },
      {
        "description": "mismatch first",
        "data": {
          "bar": 2
        },
        "valid": false
      },
      {
        "description": "wrong type",
        "data": {
          "foo": "baz",
          "bar": "quux"
        },
        "valid": false
      }
    ]
  },
  {
    "description": "allOf with base schema",
    "schema": {
      "properties": {
        "bar": {
          "type": "integer"
        }
      },
      "required": [
        "bar"
      ],
      "allOf": [
        {
          "properties": {
            "foo": {
              "type": "string"
            }
          },
          "required": [
            "foo"
          ]
        },
        {
          "properties": {
            "baz": {
              "type": "string"
            }
          },
          "required": [
            "baz"
          ]
        }
      ]
    },
    "tests": [
      {
        "description": "valid",
        "data": {
          "foo": "quux",
          "bar": 2,
          "baz": "camille"
        },
        "valid": true
      },
      {
        "description": "mismatch base schema",
        "data": {
          "foo": "quux",
          "baz": "camille"
        },
        "valid": false
      },
      {
        "description": "mismatch first allOf",
        "data": {
          "bar": 2,
          "baz": "camille"
        },
        "valid": false
      },
      {
        "description": "mismatch second allOf",
        "data": {
          "foo": "quux",
          "bar": 2
        },
        "valid": false
      },
      {
        "description": "mismatch both",
        "data": {
          "bar": 2
        },
        "valid": false
      }
    ]
  },
  {
    "description": "allOf simple types",
    "schema": {
      "allOf": [
        {
          "maximum": 30
        },
        {
          "minimum": 20
        }
      ]
    },
    "tests": [
      {
        "description": "valid",
        "data": 25,
        "valid": true
      },
      {
        "description": "mismatch one",
        "data": 35,
        "valid": false
      }
    ]
  }
]
